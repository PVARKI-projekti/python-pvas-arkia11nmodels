"""Initial schema and tables

Revision ID: de8bb8c3fd6d
Revises:
Create Date: 2023-01-19 16:57:30.368434+00:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "de8bb8c3fd6d"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    op.execute("create schema a11n")
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "roles",
        sa.Column("displayname", sa.Unicode(), nullable=False),
        sa.Column("acl", postgresql.JSONB(astext_type=sa.Text()), server_default="[]", nullable=False),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.Column("pk", postgresql.UUID(), nullable=False),
        sa.Column("created", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated", sa.DateTime(timezone=True), nullable=False),
        sa.Column("deleted", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("pk"),
        schema="a11n",
    )
    op.create_table(
        "users",
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("sms", sa.String(), nullable=True),
        sa.Column("displayname", sa.Unicode(), nullable=False),
        sa.Column("profile", postgresql.JSONB(astext_type=sa.Text()), server_default="{}", nullable=False),
        sa.Column("pk", postgresql.UUID(), nullable=False),
        sa.Column("created", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated", sa.DateTime(timezone=True), nullable=False),
        sa.Column("deleted", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("pk"),
        schema="a11n",
    )
    op.create_index(op.f("ix_a11n_users_email"), "users", ["email"], unique=True, schema="a11n")
    op.create_index(op.f("ix_a11n_users_sms"), "users", ["sms"], unique=True, schema="a11n")
    op.create_table(
        "tokens",
        sa.Column("user", postgresql.UUID(), nullable=True),
        sa.Column("sent_to", sa.String(), nullable=False),
        sa.Column("redirect", sa.String(), nullable=True),
        sa.Column("expires", sa.DateTime(timezone=True), nullable=False),
        sa.Column("used", sa.DateTime(timezone=True), nullable=True),
        sa.Column("audit_meta", postgresql.JSONB(astext_type=sa.Text()), server_default="{}", nullable=False),
        sa.Column("pk", postgresql.UUID(), nullable=False),
        sa.Column("created", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated", sa.DateTime(timezone=True), nullable=False),
        sa.Column("deleted", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user"],
            ["a11n.users.pk"],
        ),
        sa.PrimaryKeyConstraint("pk"),
        schema="a11n",
    )
    op.create_table(
        "userroles",
        sa.Column("user", postgresql.UUID(), nullable=True),
        sa.Column("role", postgresql.UUID(), nullable=True),
        sa.Column("pk", postgresql.UUID(), nullable=False),
        sa.Column("created", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated", sa.DateTime(timezone=True), nullable=False),
        sa.Column("deleted", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["role"],
            ["a11n.roles.pk"],
        ),
        sa.ForeignKeyConstraint(
            ["user"],
            ["a11n.users.pk"],
        ),
        sa.PrimaryKeyConstraint("pk"),
        schema="a11n",
    )
    op.create_index("user_role_unique", "userroles", ["user", "role"], unique=True, schema="a11n")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("user_role_unique", table_name="userroles", schema="a11n")
    op.drop_table("userroles", schema="a11n")
    op.drop_table("tokens", schema="a11n")
    op.drop_index(op.f("ix_a11n_users_sms"), table_name="users", schema="a11n")
    op.drop_index(op.f("ix_a11n_users_email"), table_name="users", schema="a11n")
    op.drop_table("users", schema="a11n")
    op.drop_table("roles", schema="a11n")
    # ### end Alembic commands ###
    op.execute("drop schema a11n")
